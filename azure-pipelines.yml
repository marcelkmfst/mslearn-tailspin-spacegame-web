# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'


variables:
  buildConfiguration: 'Release'
     

stages:
- stage: 'Build'
  displayName: 'build the webapp'
  jobs:
    - job: 'Build'
  pool:
    vmImage: 'ubuntu-20.04'
    demands:
      - npm

    variables:
        buildConfiguration: 'Release'
        wwwRootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '5.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dot netSdkVersion)'
      inputs:
        packageType: sdk
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwRootDir) --output $(wwwRootDir)'
      displayName: 'Comppile Saas assets'

    - task: gulp@1
      displayName: 'run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName:  'Write Build infos to file'
      workingDirectory: $(wwwRootDir)

    - task: DotNetCoreCLI@2 
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2 
      displayName: 'Build the project - Release $(Build.BuildId)'
      inputs:
          command: 'build'
          arguments: '--no-restore --configuration Release'
          projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project Release $(Build.BuildNumber)'
      inputs: 
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory/Release'
        zipAfterPublish: true

    - template: templates/build.yaml
      parameters:
        buildConfiguration: 'Debug'

    - template: templates/build.yaml 
      parameters:
        buildConfiguration: 'Release'

    - task: PublishBuildArtifacts@1
      displayName: 'publish Artifact: drop'
      condition: succeeded()
      
- stage: 'Deploy to ASE'
  displayName: 'deploys the .net package to AppService'
  dependsOn: 'Build'
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-20.04'
    environment: 'DEV-environment'
    variables:
    - group: Release-variables
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service deployment'
            inputs:
              appType: webAppLinux
              azureSubscription: "MK101-Management-Subscription"
              appName: '$(WebAppName)'
              package: '$(Pipeline.Workspace)/drop/$buildConfiguration)/*.zip'


